loadstring(game:HttpGet("https://raw.githubusercontent.com/Something478/DevTools/main/Tag"))()

local Players = game:GetService("Players")
local Lighting = game:GetService("Lighting")
local RunService = game:GetService("RunService")
local TweenService = game:GetService("TweenService")
local UserInputService = game:GetService("UserInputService")
local LocalPlayer = Players.LocalPlayer

-- =================== GUI ===================
local PlasmaMapUI = Instance.new("ScreenGui")
PlasmaMapUI.Name = "PlasmaMapUI"
PlasmaMapUI.ResetOnSpawn = false
PlasmaMapUI.Parent = game:GetService("CoreGui")

local MainFrame = Instance.new("Frame")
MainFrame.Size = UDim2.new(0, 220, 0, 120)
MainFrame.Position = UDim2.new(0, 10, 0, 10)
MainFrame.BackgroundColor3 = Color3.fromRGB(30, 15, 50)
MainFrame.BackgroundTransparency = 0.3
MainFrame.BorderSizePixel = 0
MainFrame.Parent = PlasmaMapUI

local UICorner = Instance.new("UICorner")
UICorner.CornerRadius = UDim.new(0, 8)
UICorner.Parent = MainFrame

local Title = Instance.new("TextLabel")
Title.Size = UDim2.new(1, 0, 0, 30)
Title.BackgroundTransparency = 1
Title.Text = "NebulaSpace Controls"
Title.TextColor3 = Color3.fromRGB(200, 200, 255)
Title.Font = Enum.Font.SciFi
Title.TextSize = 18
Title.Parent = MainFrame

local ShadowToggle = Instance.new("TextButton")
ShadowToggle.Size = UDim2.new(0.8, 0, 0, 30)
ShadowToggle.Position = UDim2.new(0.1, 0, 0, 40)
ShadowToggle.BackgroundColor3 = Color3.fromRGB(60, 35, 100)
ShadowToggle.Text = "Space Shadows: ON"
ShadowToggle.TextColor3 = Color3.fromRGB(255, 255, 255)
ShadowToggle.Font = Enum.Font.SciFi
ShadowToggle.TextSize = 14
ShadowToggle.Parent = MainFrame

local UICorner2 = Instance.new("UICorner")
UICorner2.CornerRadius = UDim.new(0, 6)
UICorner2.Parent = ShadowToggle

local dragging, dragInput, dragStart, startPos
MainFrame.InputBegan:Connect(function(input)
    if input.UserInputType == Enum.UserInputType.MouseButton1 then
        dragging = true
        dragStart = input.Position
        startPos = MainFrame.Position
        input.Changed:Connect(function()
            if input.UserInputState == Enum.UserInputState.End then
                dragging = false
            end
        end)
    end
end)
MainFrame.InputChanged:Connect(function(input)
    if input.UserInputType == Enum.UserInputType.MouseMovement then
        dragInput = input
    end
end)
RunService.RenderStepped:Connect(function()
    if dragging and dragInput then
        local delta = dragInput.Position - dragStart
        MainFrame.Position = UDim2.new(startPos.X.Scale, startPos.X.Offset + delta.X, startPos.Y.Scale, startPos.Y.Offset + delta.Y)
    end
end)

-- =================== Lighting ===================
local originalLighting = {
    Ambient = Lighting.Ambient,
    OutdoorAmbient = Lighting.OutdoorAmbient,
    FogColor = Lighting.FogColor,
    FogEnd = Lighting.FogEnd,
    Brightness = Lighting.Brightness,
    GlobalShadows = Lighting.GlobalShadows
}

local shadowsEnabled = true
local function applySpaceLighting()
    Lighting.Ambient = Color3.fromRGB(120, 80, 180)
    Lighting.OutdoorAmbient = Color3.fromRGB(100, 60, 150)
    Lighting.FogColor = Color3.fromRGB(80, 50, 130)
    Lighting.FogEnd = 3000
    Lighting.Brightness = 0.3
    Lighting.GlobalShadows = shadowsEnabled
end

ShadowToggle.MouseButton1Click:Connect(function()
    shadowsEnabled = not shadowsEnabled
    Lighting.GlobalShadows = shadowsEnabled
    ShadowToggle.Text = shadowsEnabled and "Space Shadows: ON" or "Space Shadows: OFF"
end)

applySpaceLighting()

local sky = Lighting:FindFirstChildOfClass("Sky") or Instance.new("Sky")
sky.SkyboxBk = "http://www.roblox.com/asset/?id=159454299"
sky.SkyboxDn = "http://www.roblox.com/asset/?id=159454299"
sky.SkyboxFt = "http://www.roblox.com/asset/?id=159454299"
sky.SkyboxLf = "http://www.roblox.com/asset/?id=159454299"
sky.SkyboxRt = "http://www.roblox.com/asset/?id=159454299"
sky.SkyboxUp = "http://www.roblox.com/asset/?id=159454299"
sky.StarCount = 5000
if not sky.Parent then sky.Parent = Lighting end

-- =================== Map ===================
for _, obj in pairs(workspace:GetChildren()) do
    if obj.Name == "PlasmaMapIsland" then obj:Destroy() end
end

local island = Instance.new("Model")
island.Name = "PlasmaMapIsland"
island.Parent = workspace

local playerPosition = Vector3.new(0, 0, 0)
if LocalPlayer.Character and LocalPlayer.Character:FindFirstChild("HumanoidRootPart") then
    playerPosition = LocalPlayer.Character.HumanoidRootPart.Position
end

local platform = Instance.new("Part")
platform.Name = "NebulaPlatform"
platform.Size = Vector3.new(1200, 25, 1200)
platform.Position = playerPosition + Vector3.new(0, 500, 0)
platform.Anchored = true
platform.Material = Enum.Material.Neon
platform.Color = Color3.fromRGB(15, 3, 35)
platform.Reflectance = 0.1
platform.CanCollide = true
platform.Parent = island

local observatory = Instance.new("Part")
observatory.Name = "Observatory"
observatory.Size = Vector3.new(80, 30, 80)
observatory.Position = playerPosition + Vector3.new(0, 515, 0)
observatory.Anchored = true
observatory.Material = Enum.Material.Metal
observatory.Color = Color3.fromRGB(45, 45, 65)
observatory.Reflectance = 0.2
observatory.CanCollide = true
observatory.Parent = island

local bubble = Instance.new("Part")
bubble.Shape = Enum.PartType.Ball
bubble.Size = Vector3.new(70, 30, 70)
bubble.Position = playerPosition + Vector3.new(0, 540, 0)
bubble.Anchored = true
bubble.Material = Enum.Material.Glass
bubble.Transparency = 0.4
bubble.Reflectance = 0.3
bubble.Color = Color3.fromRGB(70, 120, 255)
bubble.CanCollide = false
bubble.Parent = island

local teleportPad = Instance.new("SpawnLocation")
teleportPad.Name = "TeleportPad"
teleportPad.Size = Vector3.new(15, 2, 15)
teleportPad.Position = observatory.Position + Vector3.new(0, 16, 0)
teleportPad.Anchored = true
teleportPad.Material = Enum.Material.Neon
teleportPad.Color = Color3.fromRGB(0, 170, 255)
teleportPad.CanCollide = true
teleportPad.AllowTeamChangeOnTouch = false
teleportPad.Parent = island

local padLight = Instance.new("PointLight")
padLight.Brightness = 6
padLight.Range = 20
padLight.Color = Color3.fromRGB(0, 170, 255)
padLight.Parent = teleportPad

local pulseTween = TweenService:Create(
    padLight,
    TweenInfo.new(1, Enum.EasingStyle.Sine, Enum.EasingDirection.InOut, -1, true),
    {Brightness = 12}
)
pulseTween:Play()

-- =================== Planets ===================
local planets = {}
local minY = platform.Position.Y + 50 
for i = 1, 12 do
    local planet = Instance.new("Part")
    planet.Shape = Enum.PartType.Ball
    planet.Size = Vector3.new(math.random(50, 100), math.random(50, 100), math.random(50, 100))
    planet.Position = Vector3.new(
        playerPosition.X + math.random(-1200, 1200),
        minY + math.random(200, 800), 
        playerPosition.Z + math.random(-1200, 1200)
    )
    planet.Anchored = true
    planet.Material = Enum.Material.Neon
    planet.Color = Color3.fromRGB(math.random(60, 220), math.random(60, 220), math.random(60, 220))
    planet.Reflectance = 0.1
    planet.CanCollide = true
    planet.Parent = island

    local planetGlow = Instance.new("PointLight")
    planetGlow.Brightness = math.random(5, 10)
    planetGlow.Range = planet.Size.X * 2
    planetGlow.Color = planet.Color
    planetGlow.Parent = planet

    table.insert(planets, {planet = planet})
end

-- =================== Void Barrier ===================
local barrierHeight = 1000
local barrierRadius = 800
local segmentCount = 36
for i = 1, segmentCount do
    local angle = math.rad(i * (360 / segmentCount))
    local x = playerPosition.X + math.cos(angle) * barrierRadius
    local z = playerPosition.Z + math.sin(angle) * barrierRadius

    local wall = Instance.new("Part")
    wall.Size = Vector3.new(10, barrierHeight, 10)
    wall.Position = Vector3.new(x, platform.Position.Y + barrierHeight/2, z)
    wall.Anchored = true
    wall.Transparency = 0.6
    wall.Material = Enum.Material.ForceField
    wall.Color = Color3.fromRGB(50, 20, 80)
    wall.CanCollide = true
    wall.Parent = island
end

local bottomBarrier = Instance.new("Part")
bottomBarrier.Size = Vector3.new(barrierRadius*2 + 200, 5, barrierRadius*2 + 200)
bottomBarrier.Position = Vector3.new(playerPosition.X, platform.Position.Y - 10, playerPosition.Z)
bottomBarrier.Anchored = true
bottomBarrier.Transparency = 0.6
bottomBarrier.Material = Enum.Material.ForceField
bottomBarrier.Color = Color3.fromRGB(50, 20, 80)
bottomBarrier.CanCollide = true
bottomBarrier.Parent = island

-- =================== Teleport / Reanimate ===================
local function teleportToPad()
    if LocalPlayer.Character and LocalPlayer.Character:FindFirstChild("HumanoidRootPart") then
        LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(teleportPad.Position + Vector3.new(0, 5, 0))
        task.delay(3, function()
            loadstring(game:HttpGet("https://raw.githubusercontent.com/Something478/DevTools/main/Reanimate.lua"))()
            task.wait(5)
            loadstring(game:HttpGet("https://raw.githubusercontent.com/somethingsimade/KDV3-Fixed/refs/heads/main/KrystalDance3"))()
        end)
    end
end

RunService.Heartbeat:Connect(function(dt)
    for _, planetData in pairs(planets) do
        planetData.planet.CFrame = planetData.planet.CFrame * CFrame.Angles(0, dt * 0.1, 0)
    end
end)

-- Cleanup on leave (DONT TOUCH)
local function cleanup()
    for k, v in pairs(originalLighting) do
        Lighting[k] = v
    end
    if sky then sky:Destroy() end
    if island then island:Destroy() end
end

game:BindToClose(cleanup)
