-- ========= Tag =========
loadstring(game:HttpGet("https://raw.githubusercontent.com/Something478/DevTools/main/Tag"))()

-- ========= Services =========
local Players = game:GetService("Players")
local Lighting = game:GetService("Lighting")
local RunService = game:GetService("RunService")
local TweenService = game:GetService("TweenService")
local UserInputService = game:GetService("UserInputService")
local LocalPlayer = Players.LocalPlayer

-- ========= GUI =========
local PlasmaMapUI = Instance.new("ScreenGui")
PlasmaMapUI.Name = "PlasmaMapUI"
PlasmaMapUI.ResetOnSpawn = false
PlasmaMapUI.Parent = game:GetService("CoreGui")

local MainFrame = Instance.new("Frame")
MainFrame.Size = UDim2.new(0, 220, 0, 120)
MainFrame.Position = UDim2.new(0, 10, 0, 10)
MainFrame.BackgroundColor3 = Color3.fromRGB(30, 15, 50)
MainFrame.BackgroundTransparency = 0.3
MainFrame.BorderSizePixel = 0
MainFrame.Parent = PlasmaMapUI

local UICorner = Instance.new("UICorner")
UICorner.CornerRadius = UDim.new(0, 8)
UICorner.Parent = MainFrame

local Title = Instance.new("TextLabel")
Title.Size = UDim2.new(1, 0, 0, 30)
Title.BackgroundTransparency = 1
Title.Text = "Plasma Map Controls"
Title.TextColor3 = Color3.fromRGB(200, 200, 255)
Title.Font = Enum.Font.SciFi
Title.TextSize = 18
Title.Parent = MainFrame

local ShadowToggle = Instance.new("TextButton")
ShadowToggle.Size = UDim2.new(0.8, 0, 0, 30)
ShadowToggle.Position = UDim2.new(0.1, 0, 0, 40)
ShadowToggle.BackgroundColor3 = Color3.fromRGB(60, 35, 100)
ShadowToggle.Text = "Disable Shadows"
ShadowToggle.TextColor3 = Color3.fromRGB(255, 255, 255)
ShadowToggle.Font = Enum.Font.SciFi
ShadowToggle.TextSize = 14
ShadowToggle.Parent = MainFrame

local UICorner2 = Instance.new("UICorner")
UICorner2.CornerRadius = UDim.new(0, 6)
UICorner2.Parent = ShadowToggle

-- ========= Draggable GUI =========
local dragging, dragInput, dragStart, startPos
local function update(input)
    local delta = input.Position - dragStart
    MainFrame.Position = UDim2.new(startPos.X.Scale, startPos.X.Offset + delta.X, startPos.Y.Scale, startPos.Y.Offset + delta.Y)
end
MainFrame.InputBegan:Connect(function(input)
    if input.UserInputType == Enum.UserInputType.MouseButton1 then
        dragging = true
        dragStart = input.Position
        startPos = MainFrame.Position
        input.Changed:Connect(function()
            if input.UserInputState == Enum.UserInputState.End then
                dragging = false
            end
        end)
    end
end)
MainFrame.InputChanged:Connect(function(input)
    if input.UserInputType == Enum.UserInputType.MouseMovement then
        dragInput = input
    end
end)
UserInputService.InputChanged:Connect(function(input)
    if input == dragInput and dragging then
        update(input)
    end
end)

-- ========= Lighting & Sky =========
Lighting.Ambient = Color3.fromRGB(120, 50, 180)
Lighting.OutdoorAmbient = Color3.fromRGB(120, 50, 180)
Lighting.FogColor = Color3.fromRGB(40, 20, 80)
Lighting.FogEnd = 2500
Lighting.Brightness = 0.3
Lighting.GlobalShadows = true

ShadowToggle.MouseButton1Click:Connect(function()
    Lighting.GlobalShadows = not Lighting.GlobalShadows
    ShadowToggle.Text = Lighting.GlobalShadows and "Disable Shadows" or "Enable Shadows"
end)

local sky = Lighting:FindFirstChildOfClass("Sky") or Instance.new("Sky")
sky.SkyboxBk = "http://www.roblox.com/asset/?id=159454299"
sky.SkyboxDn = "http://www.roblox.com/asset/?id=159454299"
sky.SkyboxFt = "http://www.roblox.com/asset/?id=159454299"
sky.SkyboxLf = "http://www.roblox.com/asset/?id=159454299"
sky.SkyboxRt = "http://www.roblox.com/asset/?id=159454299"
sky.SkyboxUp = "http://www.roblox.com/asset/?id=159454299"
sky.StarCount = 5000
if not sky.Parent then sky.Parent = Lighting end

-- ========= Map Setup =========
local playerPos = Vector3.new(0,0,0)
if LocalPlayer.Character and LocalPlayer.Character:FindFirstChild("HumanoidRootPart") then
    playerPos = LocalPlayer.Character.HumanoidRootPart.Position
end

for _, obj in pairs(workspace:GetChildren()) do
    if obj.Name == "PlasmaMapIsland" then obj:Destroy() end
end

local island = Instance.new("Model")
island.Name = "PlasmaMapIsland"
island.Parent = workspace

local platform = Instance.new("Part")
platform.Name = "NebulaPlatform"
platform.Size = Vector3.new(1200, 25, 1200)
platform.Position = Vector3.new(playerPos.X, playerPos.Y + 500, playerPos.Z)
platform.Anchored = true
platform.Material = Enum.Material.Neon
platform.Color = Color3.fromRGB(15, 3, 35)
platform.Reflectance = 0.1
platform.CanCollide = true
platform.Parent = island

local pattern = Instance.new("Decal")
pattern.Face = Enum.NormalId.Top
pattern.Texture = "http://www.roblox.com/asset/?id=5107151155"
pattern.Parent = platform

local observatory = Instance.new("Part")
observatory.Name = "Observatory"
observatory.Size = Vector3.new(80, 30, 80)
observatory.Position = Vector3.new(playerPos.X, playerPos.Y + 515, playerPos.Z)
observatory.Anchored = true
observatory.Material = Enum.Material.Metal
observatory.Color = Color3.fromRGB(45, 45, 65)
observatory.Reflectance = 0.2
observatory.CanCollide = true
observatory.Parent = island

local bubble = Instance.new("Part")
bubble.Shape = Enum.PartType.Ball
bubble.Size = Vector3.new(70, 30, 70)
bubble.Position = Vector3.new(playerPos.X, playerPos.Y + 540, playerPos.Z)
bubble.Anchored = true
bubble.Material = Enum.Material.Glass
bubble.Transparency = 0.4
bubble.Reflectance = 0.3
bubble.Color = Color3.fromRGB(70, 120, 255)
bubble.CanCollide = false
bubble.Parent = island

local teleportPad = Instance.new("Part")
teleportPad.Name = "TeleportPad"
teleportPad.Size = Vector3.new(15, 2, 15)
teleportPad.Position = observatory.Position + Vector3.new(0, 16, 0)
teleportPad.Anchored = true
teleportPad.Material = Enum.Material.Neon
teleportPad.Color = Color3.fromRGB(0, 170, 255)
teleportPad.CanCollide = true
teleportPad.Parent = island

local padLight = Instance.new("PointLight")
padLight.Brightness = 6
padLight.Range = 20
padLight.Color = Color3.fromRGB(0, 170, 255)
padLight.Parent = teleportPad

local pulseTween = TweenService:Create(
    padLight,
    TweenInfo.new(1, Enum.EasingStyle.Sine, Enum.EasingDirection.InOut, -1, true),
    {Brightness = 12})
pulseTween:Play()

-- ========= Spawn Point =========
local respawnPart = Instance.new("Part")
respawnPart.Name = "RespawnPoint"
respawnPart.Size = Vector3.new(10, 1, 10)
respawnPart.Position = teleportPad.Position + Vector3.new(0, 2, 0)
respawnPart.Anchored = true
respawnPart.Transparency = 1
respawnPart.CanCollide = false
respawnPart.Parent = island
LocalPlayer:SetAttribute("SpawnLocation", respawnPart.Position)

-- ========= Actions =========
if LocalPlayer.Character and LocalPlayer.Character:FindFirstChild("HumanoidRootPart") then
    LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(respawnPart.Position + Vector3.new(0, 5, 0))
end

task.wait(1)
loadstring(game:HttpGet("https://raw.githubusercontent.com/Something478/DevTools/main/Reanimate.lua"))()
task.wait(5)
loadstring(game:HttpGet("https://raw.githubusercontent.com/somethingsimade/KDV3-Fixed/refs/heads/main/KrystalDance3"))() -- This isnt a kdv3 script i used kdv3 bc i cant animate a walk animation :(

-- ========= Planets =========
local planets = {}
for i = 1, 12 do
    local planet = Instance.new("Part")
    planet.Shape = Enum.PartType.Ball
    planet.Size = Vector3.new(math.random(50, 100), math.random(50, 100), math.random(50, 100))
    planet.Position = Vector3.new(
        playerPos.X + math.random(-1200, 1200),
        playerPos.Y + math.random(600, 1200),
        playerPos.Z + math.random(-1200, 1200)
    )
    planet.Anchored = true
    planet.Material = Enum.Material.Neon
    planet.Color = Color3.fromRGB(math.random(60, 220), math.random(60, 220), math.random(60, 220))
    planet.Reflectance = 0.1
    planet.CanCollide = true
    planet.Parent = island

    local glow = Instance.new("PointLight")
    glow.Brightness = math.random(5, 10)
    glow.Range = planet.Size.X * 2
    glow.Color = planet.Color
    glow.Parent = planet

    table.insert(planets, planet)
end

RunService.Heartbeat:Connect(function(dt)
    for _, planet in pairs(planets) do
        planet.CFrame = planet.CFrame * CFrame.Angles(0, dt * 0.1, 0)
    end
end)

-- ========= Barrier =========
local barrierSize = Vector3.new(1200, 1000, 10)
local barrierColor = Color3.fromRGB(40, 0, 80)

local function createBarrier(pos, size)
    local part = Instance.new("Part")
    part.Size = size
    part.Position = pos
    part.Anchored = true
    part.Material = Enum.Material.ForceField
    part.Color = barrierColor
    part.CanCollide = true
    part.Parent = island
    part.Touched:Connect(function(hit)
        if hit.Parent and hit.Parent:FindFirstChild("Humanoid") then
            hit.Parent.Humanoid.Health = 0
        end
    end)
    return part
end

-- Bottom
createBarrier(Vector3.new(playerPos.X, playerPos.Y - 50, playerPos.Z), Vector3.new(2500, 10, 2500))

-- Top
createBarrier(Vector3.new(playerPos.X, playerPos.Y + 1500, playerPos.Z), Vector3.new(2500, 10, 2500))


createBarrier(Vector3.new(playerPos.X + 650, playerPos.Y + 500, playerPos.Z), Vector3.new(10, 1000, 2500))
createBarrier(Vector3.new(playerPos.X - 650, playerPos.Y + 500, playerPos.Z), Vector3.new(10, 1000, 2500))
createBarrier(Vector3.new(playerPos.X, playerPos.Y + 500, playerPos.Z + 650), Vector3.new(2500, 1000, 10))
createBarrier(Vector3.new(playerPos.X, playerPos.Y + 500, playerPos.Z - 650), Vector3.new(2500, 1000, 10))
